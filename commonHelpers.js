import{S as L,a as v,i as n}from"./assets/vendor-eacb4d5c.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const l of t.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function a(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=a(e);fetch(e.href,t)}})();const p=document.querySelector(".js-gallery"),f=document.querySelector(".input-string"),E=document.querySelector(".input-wrap"),d=document.getElementById("photo-loader"),i=document.querySelector(".button-more"),u=document.getElementById("more-photo-loader");let m="";const P=s=>{m=s.target.value};f.addEventListener("input",P);const w=new L(".gallery-image-lightbox",{captions:!0,captionPosition:"bottom",captionsData:"alt",close:!0,loop:!0,enableKeyboard:!0,slideSpeed:400}),S=v.create({baseURL:"https://pixabay.com/api/",params:{key:"41857217-9df28d1efe56a78287de94859",image_type:"photo",orientation:"horizontal",safesearch:!0}}),q=async s=>{try{return(await S.get("",{params:s})).data}catch{n.error({title:"Error",message:"Error fetching or processing photos"})}},I=s=>{let r=1,a=!1;const o=40;return async()=>{try{const{hits:e,total:t}=await q({q:s,page:r,per_page:o});if(t<o){n.info({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}),f.value="",d.classList.remove("loader"),i.style.display="none";return}return a?n.info({message:"We're sorry, but you've reached the end of search results."}):(r>=Math.floor(t/o)&&(a=!0),r+=1,e)}catch{n.error({title:"Error",message:"Error fetching or processing photos"})}}},g=async s=>{const r=await s(),a=r.map(e=>M(e.webformatURL));await Promise.all(a),x(r),i.style.display="block";const o=p.querySelector(".gallery-item");if(o){const e=o.getBoundingClientRect().height;window.scrollBy({top:2*e,behavior:"smooth"})}};let c=null;const $=async s=>{if(s.preventDefault(),c!==null&&i.removeEventListener("click",c),p.innerHTML="",i.style.display="none",m.trim()==="")return n.error({title:"Error",message:"Please, type a search query"});c=I(m);try{d.classList.add("loader"),await g(c)}catch{n.error({title:"Error",message:"Error fetching or processing photos"})}finally{d.classList.remove("loader"),u.classList.remove("loader"),i.classList.remove("is-hiden")}i.addEventListener("click",async()=>{try{u.classList.add("loader"),await g(c)}catch{n.error({title:"Error",message:"Error fetching or processing photos"})}finally{d.classList.remove("loader"),u.classList.remove("loader"),i.classList.remove("is-hiden")}}),f.value="",w.refresh()};E.addEventListener("submit",$);function x(s=[]){const r=s.reduce((a,{largeImageURL:o,webformatURL:e,tags:t,likes:l,views:h,comments:y,downloads:b})=>a+`
            <li class="gallery-item">
                <a href="${o}" class="gallery-image-lightbox">
                    <img class="gallery-image"
                        src="${e}"
                        alt="${t}"
                    />
                </a>
                <div class="photo-info">
                    <p class="item-info"><b>Likes</b><br>${l}</p>
                    <p class="item-info"><b>Views</b><br>${h}</p>
                    <p class="item-info"><b>Comments</b><br>${y}</p>
                    <p class="item-info"><b>Dowloads</b><br>${b}</p>
                </div>
            </li>`,"");p.insertAdjacentHTML("beforeend",r)}function M(s){return new Promise((r,a)=>{const o=new Image;o.onload=r,o.onerror=a,o.src=s})}
//# sourceMappingURL=commonHelpers.js.map
