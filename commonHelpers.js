import{S as v,a as P,i as c}from"./assets/vendor-eacb4d5c.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function i(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(t){if(t.ep)return;t.ep=!0;const s=i(t);fetch(t.href,s)}})();const g=document.querySelector(".js-gallery"),h=document.querySelector(".input-string"),E=document.querySelector(".input-wrap"),u=document.getElementById("photo-loader"),a=document.querySelector(".button-more"),p=document.getElementById("more-photo-loader");let m="";const w=r=>{m=r.target.value};h.addEventListener("input",w);const S=new v(".gallery-image-lightbox",{captions:!0,captionPosition:"bottom",captionsData:"alt",close:!0,loop:!0,enableKeyboard:!0,slideSpeed:400}),q=P.create({baseURL:"https://pixabay.com/api/",params:{key:"41857217-9df28d1efe56a78287de94859",image_type:"photo",orientation:"horizontal",safesearch:!0}}),F=async r=>{try{return(await q.get("",{params:r})).data}catch{c.error({title:"Error",message:"Error fetching or processing photos"})}},I=r=>{const e={page:1,isLastPage:!1,per_page:40};return async()=>{try{const{hits:i,total:o}=await F({q:r,page:e.page,per_page:e.per_page});if(o===0){c.info({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"}),h.value="",u.classList.remove("loader"),a.classList.add("is-hidden");return}return e.isLastPage=e.page>=Math.ceil(o/e.per_page),e.page+=1,e.isLastPage?(c.info({message:"We're sorry, but you've reached the end of search results."}),a.style.display="none",a.removeEventListener("click",d)):a.style.display="block",i}catch{c.error({title:"Error",message:"Error fetching or processing photos"})}}},f=async r=>{const e=await r(),i=e.map(t=>M(t.webformatURL));await Promise.all(i),x(e);const o=g.querySelector(".gallery-item");if(o){const t=o.getBoundingClientRect().height;window.scrollBy({top:2*t,behavior:"smooth"})}};let n=null;const $=async r=>{if(r.preventDefault(),n!==null&&(a.removeEventListener("click",d),n=null),g.innerHTML="",a.style.display="none",m.trim()===""){c.error({title:"Error",message:"Please, type a search query"});return}n=I(m);try{u.classList.add("loader"),await f(n)}catch{c.error({title:"Error",message:"Error fetching or processing photos"})}finally{u.classList.remove("loader"),p.classList.remove("loader"),a.classList.remove("is-hidden"),a.addEventListener("click",d)}a.addEventListener("click",d),h.value="",S.refresh()};a.classList.add("is-hidden");E.addEventListener("submit",$);async function d(){try{p.classList.add("loader"),await f(n)}catch{c.error({title:"Error",message:"Error fetching or processing photos"})}finally{u.classList.remove("loader"),p.classList.remove("loader"),a.classList.remove("is-hidden")}n&&n.isLastPage?(console.log("Reached before hiding button"),a.classList.add("is-hidden")):a.classList.remove("is-hidden")}function x(r=[]){const e=r.reduce((i,{largeImageURL:o,webformatURL:t,tags:s,likes:l,views:y,comments:L,downloads:b})=>i+`
            <li class="gallery-item">
                <a href="${o}" class="gallery-image-lightbox">
                    <img class="gallery-image"
                        src="${t}"
                        alt="${s}"
                    />
                </a>
                <div class="photo-info">
                    <p class="item-info"><b>Likes</b><br>${l}</p>
                    <p class="item-info"><b>Views</b><br>${y}</p>
                    <p class="item-info"><b>Comments</b><br>${L}</p>
                    <p class="item-info"><b>Dowloads</b><br>${b}</p>
                </div>
            </li>`,"");g.insertAdjacentHTML("beforeend",e)}function M(r){return new Promise((e,i)=>{const o=new Image;o.onload=e,o.onerror=i,o.src=r})}
//# sourceMappingURL=commonHelpers.js.map
